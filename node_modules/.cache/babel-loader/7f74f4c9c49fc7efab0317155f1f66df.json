{"ast":null,"code":"import \"source-map-support/register\";\nimport * as uuid from \"uuid\";\nimport AWS from \"aws-sdk\";\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nexport async function main(event, context) {\n  // Request body is passed in as a JSON encoded string in 'event.body'\n  const data = JSON.parse(event.body);\n  const params = {\n    TableName: process.env.tableName,\n    Item: {\n      // The attributes of the item to be created\n      userId: \"123\",\n      // The id of the author\n      noteId: uuid.v1(),\n      // A unique uuid\n      content: data.content,\n      // Parsed from request body\n      attachment: data.attachment,\n      // Parsed from request body\n      createdAt: Date.now() // Current Unix timestamp\n\n    }\n  };\n\n  try {\n    await dynamoDb.put(params).promise();\n    return {\n      statusCode: 200,\n      body: JSON.stringify(params.Item)\n    };\n  } catch (e) {\n    return {\n      statusCode: 500,\n      body: JSON.stringify({\n        error: e.message\n      })\n    };\n  }\n}","map":{"version":3,"sources":["/Users/vishal.garg/master/notes-api/create.js"],"names":["uuid","AWS","dynamoDb","DynamoDB","DocumentClient","main","event","context","data","JSON","parse","body","params","TableName","process","env","tableName","Item","userId","noteId","v1","content","attachment","createdAt","Date","now","put","promise","statusCode","stringify","e","error","message"],"mappings":";AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,GAAP,MAAgB,SAAhB;AAEA,MAAMC,QAAQ,GAAG,IAAID,GAAG,CAACE,QAAJ,CAAaC,cAAjB,EAAjB;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AACzC;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,IAAjB,CAAb;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADV;AAEbC,IAAAA,IAAI,EAAE;AACJ;AACAC,MAAAA,MAAM,EAAE,KAFJ;AAEW;AACfC,MAAAA,MAAM,EAAEnB,IAAI,CAACoB,EAAL,EAHJ;AAGe;AACnBC,MAAAA,OAAO,EAAEb,IAAI,CAACa,OAJV;AAImB;AACvBC,MAAAA,UAAU,EAAEd,IAAI,CAACc,UALb;AAKyB;AAC7BC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EANP,CAMmB;;AANnB;AAFO,GAAf;;AAYA,MAAI;AACF,UAAMvB,QAAQ,CAACwB,GAAT,CAAad,MAAb,EAAqBe,OAArB,EAAN;AAEA,WAAO;AACLC,MAAAA,UAAU,EAAE,GADP;AAELjB,MAAAA,IAAI,EAAEF,IAAI,CAACoB,SAAL,CAAejB,MAAM,CAACK,IAAtB;AAFD,KAAP;AAID,GAPD,CAOE,OAAOa,CAAP,EAAU;AACV,WAAO;AACLF,MAAAA,UAAU,EAAE,GADP;AAELjB,MAAAA,IAAI,EAAEF,IAAI,CAACoB,SAAL,CAAe;AAAEE,QAAAA,KAAK,EAAED,CAAC,CAACE;AAAX,OAAf;AAFD,KAAP;AAID;AACF","sourcesContent":["import * as uuid from \"uuid\";\nimport AWS from \"aws-sdk\";\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nexport async function main(event, context) {\n  // Request body is passed in as a JSON encoded string in 'event.body'\n  const data = JSON.parse(event.body);\n\n  const params = {\n    TableName: process.env.tableName,\n    Item: {\n      // The attributes of the item to be created\n      userId: \"123\", // The id of the author\n      noteId: uuid.v1(), // A unique uuid\n      content: data.content, // Parsed from request body\n      attachment: data.attachment, // Parsed from request body\n      createdAt: Date.now(), // Current Unix timestamp\n    },\n  };\n\n  try {\n    await dynamoDb.put(params).promise();\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify(params.Item),\n    };\n  } catch (e) {\n    return {\n      statusCode: 500,\n      body: JSON.stringify({ error: e.message }),\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}